{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monster","id","name","email","CardList","monsters","map","SearchBox","type","placeholder","onChange","handler","App","state","searchField","fetch","then","response","json","users","setState","this","filteredMonsters","filter","toLowerCase","includes","toLocaleLowerCase","placeHolder","e","target","value","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yTAGaA,EAAO,SAAAC,GAAK,OACrB,sBAAKC,UAAU,iBAAf,UACI,qBAAKC,IAAI,UAAUC,IAAG,+BAA0BH,EAAMI,QAAQC,GAAxC,eACtB,6BAAKL,EAAMI,QAAQE,OACnB,4BAAIN,EAAMI,QAAQG,YCHbC,G,MAAW,SAACR,GAAD,OACnB,qBAAKC,UAAU,YAAf,SAEOD,EAAMS,SAASC,KAAI,SAAAN,GAAO,OAAI,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,WCJhDM,G,MAAY,SAAAX,GAAK,OAC1B,uBAAOC,UAAU,SAASW,KAAK,SAASC,YAAab,EAAMa,YAAaC,SAAUd,EAAMe,YC2B7EC,E,kDAzBb,aAAe,IAAD,8BACZ,gBACKC,MAAQ,CACXC,YAAa,GACbT,SAAU,IAJA,E,qDAOd,WAAqB,IAAD,OAClBU,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKC,SAAS,CAAEf,SAAUc,S,oBAE3C,WAAU,IAAD,OACP,EAAgCE,KAAKR,MAA9BR,EAAP,EAAOA,SAAUS,EAAjB,EAAiBA,YACXQ,EAAmBjB,EAASkB,QAAO,SAAAvB,GAAO,OAAIA,EAAQE,KAAKsB,cAAcC,SAASX,EAAYY,wBACpG,OACE,sBAAK7B,UAAU,MAAf,UACE,cAAC,EAAD,CAAW8B,YAAY,kBAAkBhB,QAAU,SAAAiB,GAAC,OAAI,EAAKR,SAAS,CAACN,YAAac,EAAEC,OAAOC,WAC7F,cAAC,EAAD,CAAUzB,SAAUiB,W,GAnBVS,aCOHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBlB,MAAK,YAAkD,IAA/CmB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.edefbf08.chunk.js","sourcesContent":["import React from 'react';\nimport './card.style.css';\n\nexport const Card = props => (\n    <div className='card-container'>\n        <img alt=\"monster\" src={`https://robohash.org/${props.monster.id}?set=set2`}></img>\n        <h2>{props.monster.name}</h2>\n        <p>{props.monster.email}</p>\n    </div>\n);","import React from 'react';\nimport {Card} from '../card/card.component';\nimport './card-list.style.css';\n\nexport const CardList = (props) => (\n     <div className='card-list'>        \n        {\n            props.monsters.map(monster => <Card key={monster.id} monster={monster}></Card>)\n        }\n      </div>\n);","import React from 'react';\nimport './search-box.style.css'\n\nexport const SearchBox = props => (\n    <input className=\"search\" type=\"search\" placeholder={props.placeholder} onChange={props.handler} ></input>\n);","import { Component } from 'react';\nimport './App.css';\nimport { CardList } from './components/card-list/card-list.component';\nimport {SearchBox} from './components/search-box/search.component'\n// function App() {\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      searchField: '',\n      monsters: []\n    }\n  }\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users')\n    .then(response => response.json())\n    .then(users => this.setState({ monsters: users }))\n  }\n  render() {\n    const {monsters, searchField} = this.state;\n    const filteredMonsters = monsters.filter(monster => monster.name.toLowerCase().includes(searchField.toLocaleLowerCase()));\n    return (\n      <div className=\"App\">\n        <SearchBox placeHolder=\"search monsters\" handler= {e => this.setState({searchField: e.target.value})} ></SearchBox>\n        <CardList monsters={filteredMonsters}>        \n        </CardList>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}